name: Run tests

on: pull_request

jobs:
  check-docs-site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check mdbook-admonish changes are not committed
        run: |
          if grep -q "do not edit: managed by \`mdbook-admonish install\`" docs/book.toml; then
            echo "remove generated mdbook-admonish lines from docs/books.toml" >&2
            exit 1
          fi
      - name: Install nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-23.05
      - name: Check documentation site builds
        run: nix-shell ./.github/scripts/build-documentation.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell/actions/setup@v2.4.7
        with:
          enable-stack: true
      - name: Setup
        run: |
          stack --no-terminal install stylish-haskell hlint
      - name: Lint
        run: |
          set -ex
          stack --no-terminal exec ./lint.sh
          stack --no-terminal exec ./style.sh
          git diff --exit-code

  doctest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell/actions/setup@v2.4.7
        with:
          enable-stack: true
      - name: Setup
        run: |
          set -ex
          stack --no-terminal setup
          stack --no-terminal install doctest
      - name: Build
        run: |
          stack --no-terminal build
      - name: Test
        run: |
          stack --no-terminal exec -- bash -c "DEJAFU_DOCTEST=y doctest dejafu/Test"

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        resolver:
          - lts-10.0 # ghc-8.2
          - lts-12.0 # ghc-8.4
          - lts-14.0 # ghc-8.6
          - lts-15.0 # ghc-8.8
          - lts-17.0 # ghc-8.10
          - lts-19.0 # ghc-9.0
          - lts-20.0 # ghc-9.2
          - lts-21.0 # ghc-9.4
          - nightly-2023-07-01 # ghc-9.6

    steps:
      - uses: actions/checkout@v4
      - uses: haskell/actions/setup@v2.4.7
        with:
          enable-stack: true
      - name: Setup
        env:
          RESOLVER: ${{ matrix.resolver }}
        run: |
          set -ex
          stack --no-terminal init --resolver="$RESOLVER" --force
          stack --no-terminal setup
      - name: Build
        env:
          RESOLVER: ${{ matrix.resolver }}
        run: |
          stack --no-terminal build --ghc-options="-Werror -Wno-unused-imports -Wno-incomplete-uni-patterns"
      - name: Test
        env:
          RESOLVER: ${{ matrix.resolver }}
        run: |
          cd dejafu-tests
          stack --no-terminal exec -- dejafu-tests +RTS -s
