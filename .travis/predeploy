#!/usr/bin/env bash

function msg {
  pkg=$1
  file=$2
  note=$3
  if [[ -z "$note" ]]; then
    echo "${pkg}: package version mismatch in ${file}" >&2
  else
    echo "${pkg}: package version mismatch in ${file} (${note})" >&2
  fi
}

fail=false

for pkg in concurrency dejafu hunit-dejafu tasty-dejafu; do
  ver=`grep '^version:' ${pkg}/${pkg}.cabal | sed 's/^version: *//'`

  if ! grep -q -E "tag: *${pkg}-${ver}" $pkg/$pkg.cabal; then
    msg $pkg $pkg/$pkg.cabal
    fail=true
  fi

  if ! grep -q "^${ver}" $pkg/CHANGELOG.rst; then
    msg $pkg $pkg/CHANGELOG.rst "missing header"
    fail=true
  fi

  if ! grep -q -E "Git.*${pkg}-${ver}" $pkg/CHANGELOG.rst; then
    msg $pkg $pkg/CHANGELOG.rst "missing git tag"
    fail=true
  fi

  if ! grep -q -E "Hackage.*${pkg}-${ver}" $pkg/CHANGELOG.rst; then
    msg $pkg $pkg/CHANGELOG.rst "missing hackage link"
    fail=true
  fi

  if ! grep -q -E "${pkg}.*${ver}" README.markdown; then
    msg $pkg README.markdown
    fail=true
  fi

  if ! grep -q -E "${pkg}.*${ver}" doc/getting_started.rst; then
    msg $pkg doc/getting_started.rst
    fail=true
  fi

  if git grep -q unreleased $pkg; then
    echo "${pkg}: 'unreleased' appears in source" >&2
    fail=true
  fi
done

if $fail; then
  exit 1
fi
